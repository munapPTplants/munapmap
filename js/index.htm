<!DOCTYPE html>
<html>
<head>
    <title>Leaflet web map with Google Sheets</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"/>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="https://unpkg.com/font-awesome@4.7.0/css/font-awesome.min.css"/>
    <link rel="stylesheet" href="css/leaflet.awesome-markers.css"/>
    <link rel="stylesheet" href="css/leaflet-sidebar.css"/>
    <link rel="stylesheet" href="css/L.Control.Locate.min.css" />
     <link rel="stylesheet" href="css/MarkerCluster.css">
    <link rel="stylesheet" href="css/MarkerCluster.Default.css">
   
    <style>
        body {
            padding: 0;
            margin: 0;
        }
        html, body, #map {
            height: 100%;
            width: 100%;
        }

        img {width:auto ; height: 320px; }


        #sidebar-content, #sidebar-title {
            word-break: break-word;
            margin-right: 50px;
        }
       .testpanel { 
            font-style: italic;
            text-align: justify;
            color: #AAA;
        }
     </style>
    <script type="text/javascript" src="js/jquery-3.5.1.min.js"></script>
    <script type="text/javascript" src="js/jquery.csv.min.js"></script>
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js" ></script>
    <script type="text/javascript" src="js/leaflet-sidebar.js"></script>
    <script type="text/javascript" src="js/L.Control.Locate.js" ></script>   
    <script type="text/javascript" src="js/leaflet.markercluster-src.js"></script>
    <script type="text/javascript" src="js/leaflet.awesome-markers.min.js"></script>
</head>
<body>
<div id="map"></div>


<script>
var OpenTopoMap = L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {
	maxZoom: 17,
	attribution: 'Map data: &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)'
});


var Esri_WorldImagery = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
	attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'
});


var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
	maxZoom: 19,
	attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>'});


var Positron= L.tileLayer(
  "https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}{r}.png",
  {
    attribution:
      "&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> &copy; <a href='http://cartodb.com/attributions'>CartoDB</a>",
    subdomains: "abcd",
    maxZoom: 19
  });

var HikingTrails = L.tileLayer('https://tile.waymarkedtrails.org/{id}/{z}/{x}/{y}.png', {
		id: 'hiking',
		pointable: true,
		attribution: '&copy; <a href="http://waymarkedtrails.org">Sarah Hoffmann</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)',
	});
	var CyclingTrails = L.tileLayer('https://tile.waymarkedtrails.org/{id}/{z}/{x}/{y}.png', {
		id: 'cycling',
		pointable: true,
		attribution: '&copy; <a href="http://waymarkedtrails.org">Sarah Hoffmann</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)',
	});

 
var baseLayers = {"OpenStreetMap": OpenStreetMap_Mapnik,
		  "OpenTopoMap": OpenTopoMap,
                  "EsriWorld": Esri_WorldImagery
                  };

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var map= L.map('map', {
		center: [44.04691051,10.84043062],
		zoom: 12
	});


Esri_WorldImagery.addTo(map); // default basemap

L.control.locate({strings: { title: "Si sono qui!" }}).addTo(map);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



var sidebar = L.control
  .sidebar({
    container: "sidebar",
    closeButton: true,
    position: "right"
  })
  .addTo(map);

let panelID = "my-info-panel"; // dichiara una variabile globale

var panelContent = {
  id: panelID,
  tab: "<i class='fa fa-bars active'></i>",
  pane: "<p id='sidebar-content'></p>",
  title: "<h2 id='sidebar-title'>Nessuna osservazione selezionata!</h2>"
};

sidebar.addPanel(panelContent)
            // add a tttab with a click callback, initially disabled
            .addPanel({
                id:   'mail',
                tab:  '<i class="fa fa-envelope"></i>',
                title: 'Contatti',
                pane: "<p id='sidebar-mail-content'> </p>",
                button: function() { alert('Mail') },
                disabled: true,
            })
        .addPanel({
                id: 'click',
                tab: '<i class="fa fa-info"></i>',
                title: 'Info',
                pane: "<p id='sidebar-info-mail-content'> </p>",
                button: function () { alert('Informazioni') }
                });


map.on("click", function() {
  sidebar.close(panelID);
});

</script>



<script>
var markers = L.markerClusterGroup().addTo(map);
var pointGroupLayer;
var notes = ["index","Longitude","Latitudine"];

var groupedOverlays = {

                  "Sentieri": HikingTrails, 
                  "Piste ciclabili": CyclingTrails
                      };

var layerControl=L.control.layers(baseLayers, groupedOverlays, {position: 'topleft'}).addTo(map);

map.on('click', function(e) {
  alert("Lat & Lon : " + e.latlng.lat + ", " + e.latlng.lng)
});


$(document).ready(function() {
  $.ajax({
    type: "GET",
    url: 'data/kobo_munap.csv',
    dataType: "text",
    success: function(dataf){ addPoints(dataf);}
  });
});

function addPoints(data) {
  if (pointGroupLayer != null) {
    pointGroupLayer.remove();
  }
  pointGroupLayer = L.layerGroup();
  layerControl.addOverlay(pointGroupLayer, "Segnalazioni");
   data = $.csv.toObjects(data);
   console.log(data);
   for (var row = 0; row < data.length; row++) {
    var marker = L.marker([data[row].Latitude, data[row].Longitude]).addTo(pointGroupLayer);
        marker.feature = {
        properties: {
        data_invio:data[row].data_invio,
        aut:data[row].rilevatore,
        specie:data[row].nome_specie,
        cat:data[row].categoria,
        sic:data[row].sicurezza_determinazione,
        rar:data[row].rarita,
        note:data[row].note,
        id:data[row].index,
        foto_a:data[row].foto_A,
        foto_b:data[row].foto_B,
        audio:data[row].audionote,
        cat:data[row].categoria

      }
    };
 markers.addLayer(marker);
     marker.on({
      click: function(e) {
        L.DomEvent.stopPropagation(e);
        document.getElementById("sidebar-title").innerHTML =e.target.feature.properties.specie;
        document.getElementById("sidebar-content").innerHTML =
          "<strong>Data</strong>:"+e.target.feature.properties.data_invio + "<br>" +
          "<strong>Osservatore</strong>:"+e.target.feature.properties.aut + "<br>" +
          "<strong>Specie</strong>:"+e.target.feature.properties.specie + "<br>" + 
          "<strong>Categoria</strong>:"+e.target.feature.properties.cat+ "<br>"+
          "<strong>Sicurezza determinazione</strong>:"+e.target.feature.properties.sic + "<br>" +
          "<strong>Rarita\'</strong>:"+e.target.feature.properties.rar + "<br>" +
          "<strong>Note</strong>:"+e.target.feature.properties.note + "<br>" +
          "<strong>ID</strong>:"+e.target.feature.properties.id + "<br>" + 
          "<strong>Validatore</strong>:"+"MUNAP"+ "<br>"+
          "<strong>Foto A</strong>:"+"<br>"+
          "<img src=\'"+e.target.feature.properties.foto_a+"' alt=\"Non disponibile\">"+ "<br>"+
          "<strong>Foto B</strong>:"+"<br>"+
          "<img src=\'"+e.target.feature.properties.foto_b+"' alt=\"Non disponibile\">"+ "<br>";
       sidebar.open(panelID);
      }
    });
    
    // AwesomeMarkers is used to create fancier icons
   function determineColor(data) {
  if ( data === "Piante") {
    return 'green';
  } else if ( data === "Animali" ) {
    return 'red';
  } else if ( data === "Funghi" ) {
    return 'brown';
  } else if ( data === "Ambienti" ) {
    return 'violet';
  }
  else {
    return 'blue';
  }
};
  var icon = L.AwesomeMarkers.icon({
       icon: "info-sign",
       markerColor: determineColor(data[row].categoria),
       prefix: "glyphicon",
       extraClasses: "fa-rotate-0"
    });
    marker.setIcon(icon);
   
  }
};

 
// https://digital-geography.com/csv-heatmap-leaflet/
</script>

</body>
</html>
